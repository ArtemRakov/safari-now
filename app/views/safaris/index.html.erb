 <div class="flexbox">
   <div class="cards-container">
     <div class="row">
      <% @safaris.each do |safari| %>
        <%= link_to safari_path(safari) do %>
            <%= render 'shared/card', safari: safari %>
          <% end %>
        <% end %>
     </div>
   </div>

  <div id="map"></div>
</div>

<%= content_for(:before_js) do %>
  <%= javascript_include_tag "https://maps.google.com/maps/api/js?key=AIzaSyCMtlyoljyulu4QGTB6SxcjUMxW-lCmv2I" %>
  <%= javascript_include_tag "https://cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/markerclusterer/src/markerclusterer_compiled.js" %>
  <%= javascript_include_tag "https://cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js" %>
<% end %>


<% content_for(:after_js) do %>
<!-- Initialize Swiper -->
  <%= javascript_tag do %>
    var swiper = new Swiper('.swiper-container', {
        pagination: '.swiper-pagination',
        slidesPerView: 1,
        paginationClickable: true,
        spaceBetween: 30,
        keyboardControl: true,
        nextButton: '.swiper-button-next',
        prevButton: '.swiper-button-prev',
    });
  <% end %>

<!-- Init map -->
  <%= javascript_tag do %>
    $(document).ready(function() {
      var styles =
[
    {
        "featureType": "administrative",
        "elementType": "labels.text.fill",
        "stylers": [
            {
                "color": "#444444"
            }
        ]
    },
    {
        "featureType": "landscape",
        "elementType": "all",
        "stylers": [
            {
                "color": "#f2f2f2"
            }
        ]
    },
    {
        "featureType": "landscape.natural",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "on"
            },
            {
                "color": "#b4f06d"
            },
            {
                "saturation": "-40"
            },
            {
                "lightness": "58"
            }
        ]
    },
    {
        "featureType": "landscape.natural.landcover",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "simplified"
            }
        ]
    },
    {
        "featureType": "landscape.natural.terrain",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "simplified"
            }
        ]
    },
    {
        "featureType": "poi",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "poi.park",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "simplified"
            }
        ]
    },
    {
        "featureType": "road",
        "elementType": "all",
        "stylers": [
            {
                "saturation": -100
            },
            {
                "lightness": 45
            },
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "road.highway",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "road.arterial",
        "elementType": "labels.icon",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "transit",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "water",
        "elementType": "all",
        "stylers": [
            {
                "color": "#f4f2cd"
            },
            {
                "visibility": "on"
            }
        ]
    }
];

      var handler = Gmaps.build('Google');

      handler.buildMap({
        provider: { styles: styles },
        internal: { id: 'map' } }, function() {
        markers = handler.addMarkers(<%= raw @hash.to_json %>);

        handler.bounds.extendWith(markers);

        handler.fitMapToBounds();

        if (markers.length == 0) {
          handler.getMap().setZoom(2);
        } else if (markers.length == 1) {
          handler.getMap().setZoom(14);
        }
      });
    });
  <% end %>
<% end %>
